# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on: 
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        jdk: ['17', '21']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.jdk }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven (no dependency check for PR)
        if: github.event_name == 'pull_request'
        run: ./mvnw -B -U test-compile -Ddependency-check.skip=true
#        run: ./mvnw -B -U verify -Ddependency-check.skip=true
      - name: Build with Maven (with dependency check)
        if: github.event_name != 'pull_request'
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
          ./mvnw -B -pl '!izpack-dist' test-compile
#        run: ./mvnw -B -U verify
      - name: Running Maven GUI tests
        run: |
          sudo apt-get install fluxbox
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          fluxbox &> ~/fluxbox.log &
          ./mvnw -B -pl '!izpack-dist' test-compile
#          ./mvnw -B verify -Pwith-gui-tests -Ddependency-check.skip=true
  deploy:
    if: contains( github.ref, 'master')
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          gpg-private-key: "${{ secrets.GPG_SIGNING_KEY }}"
          overwrite-settings: false
      - name: Deploy snapshot artifacts
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: ./mvnw deploy --settings .github/workflows/settings.xml -DskipTests=true
